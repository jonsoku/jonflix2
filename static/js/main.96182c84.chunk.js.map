{"version":3,"sources":["../../jonflix/src/assets/noPosterSmall.png","../../jonflix/src/Components/Section.js","../../jonflix/src/Components/Loader.js","../../jonflix/src/Components/Message.js","../../jonflix/src/Components/Poster.js","../../jonflix/src/Routes/Home/HomePresenter.js","../../jonflix/src/api.js","../../jonflix/src/Routes/Home/index.js","../../jonflix/src/Routes/Home/HomeContainer.js","../../jonflix/src/Routes/TV/TVPresenter.js","../../jonflix/src/Routes/TV/index.js","../../jonflix/src/Routes/TV/TVContainer.js","../../jonflix/src/Components/Header.js","../../jonflix/src/Routes/Search/SearchPresenter.js","../../jonflix/src/Routes/Search/index.js","../../jonflix/src/Routes/Search/SearchContainer.js","../../jonflix/src/Routes/Detail/DetailPresenter.js","../../jonflix/src/Routes/Detail/index.js","../../jonflix/src/Routes/Detail/DetailContainer.js","../../jonflix/src/Components/Router.js","../../jonflix/src/Components/GlobalStyles.js","../../jonflix/src/Components/App.js","../../jonflix/src/index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Conatainer","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","Link","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","react","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","movieApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Header_templateObject4","withRouter","pathname","location","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","handleSubmit","SearchPresenter_Container","onSubmit","placeholder","value","onChange","Fragment","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Detail_DetailPresenter","Router","HashRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","Search","Detail","Redirect","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.96182c84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.74e8143c.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :first-child{\n    margin-top:30px;\n  };\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      겁나 바쁘게 로딩중!!\n    </span>\n    </Container>\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Conatainer = styled.div`\n  width:100vw;\n  display:flex;\n  justify-content: center;\n\n`;\n\nconst Text = styled.span`\ncolor:${props => props.color};\nfont-weight: 600 ;\n`;\n\nconst Message = ({text, color}) => (\n    <Conatainer>\n        <Text color={{color}}>{text}</Text>\n    </Conatainer>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Container = styled.div`\nfont-size:12px;\n`;\n\n\nconst Image = styled.div`\nbackground-image: url(${props => props.bgUrl});\nheight: 180px;\nbackground-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\ndisplay:block;\nmargin-bottom:3px;\n`;\n\nconst Year = styled.span`\nfont-size:10px;\ncolor:rgba(255,255,255,0.5);\n`;\n\n\n\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={\n                        imageUrl\n                            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                            : require(\"../assets/noPosterSmall.png\")\n                    }\n                />\n                <Rating>\n                <span role=\"img\" aria-label=\"rating\">\n                    ⭐️\n                </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>\n                {title.length > 15 ? `${title.substring(0,20)}...` : title}\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year:PropTypes.string,\n    isMovie:PropTypes.bool,\n\n};\n\nexport default Poster;","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\n\nconst HomePresenter = ({nowPlaying,popular,upcoming,loading,error}) => (\n    <Fragment>\n        <Helmet>\n            <title>Movies | Jonflix</title>\n        </Helmet>\n        {loading ? (\n        <Loader/>\n        ) : (\n        <Container>\n\n            {upcoming && upcoming.length > 0 && (\n                <Section title=\"Upcoming\">{upcoming.map(movie => (\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0,4)}\n                        isMovie={true}\n                    />\n                ))}</Section>\n            )}\n            {nowPlaying && nowPlaying.length > 0 && (\n                <Section title=\"Now playing\">{nowPlaying.map(movie => (\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0,4)}\n                        isMovie={true}\n                    />\n                ))}</Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular\">{popular.map(movie => (\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0,4)}\n                        isMovie={true}\n                    />\n                ))}</Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error}/>}\n        </Container>\n        )}\n    </Fragment>\n);\n\n\n\n\nHomePresenter.propTypes = {\n    nowPlaying:PropTypes.array,\n    popular:PropTypes.array,\n    upcoming:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string,\n\n}\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        \"api_key\":\"7b605deba44e608a0ae074a9c646930b\",\n        \"language\":\"ko-KR\"\n    }\n});\n\nexport const movieApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id =>\n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id =>\n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};\n\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {movieApi} from \"../../api\";\n\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying:null,\n        upcoming:null,\n        popular:null,\n        error:null,\n        loading:true,\n    };\n\n    async componentDidMount() {\n        try{\n            const {data: {results: nowPlaying}} = await movieApi.nowPlaying();\n            const {data: {results: upcoming}} = await movieApi.upcoming();\n            const {data: {results: popular}} = await movieApi.popular();\n            //throw Message();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        }catch{\n            this.setState({\n                error:\"영화 정보를 불러올 수 없습니다....\"\n            });\n        }finally{\n            this.setState({\n                loading:false\n            })\n        }\n    }\n\n    render() {\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\n        return <HomePresenter\n            nowPlaying={nowPlaying}\n            upcoming={upcoming}\n            popular={popular}\n            error={error}\n            loading={loading}\n        />\n    }\n\n}","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <Fragment>\n      <Helmet>\n          <title>TV Shows | Jonflix</title>\n      </Helmet>\n      {loading ? (\n      <Loader />\n      ) : (\n      <Container>\n          {topRated && topRated.length > 0 && (\n              <Section title=\"Top Rated Shows\">\n                  {topRated.map(show => (\n                      <Poster\n                          key={show.id}\n                          id={show.id}\n                          imageUrl={show.poster_path}\n                          title={show.original_name}\n                          rating={show.vote_average}\n                          year={show.first_air_date.substring(0,4)}\n                      />\n                  ))}\n              </Section>\n          )}\n          {popular && popular.length > 0 && (\n              <Section title=\"Popular Shows\">\n                  {popular.map(show => (\n                      <Poster\n                          key={show.id}\n                          id={show.id}\n                          imageUrl={show.poster_path}\n                          title={show.original_name}\n                          rating={show.vote_average}\n                          year={show.first_air_date.substring(0,4)}\n                      />\n                  ))}\n              </Section>\n          )}\n          {airingToday && airingToday.length > 0 && (\n              <Section title=\"Airing Today\">\n                  {airingToday.map(show => (\n                      <Poster\n                          key={show.id}\n                          id={show.id}\n                          imageUrl={show.poster_path}\n                          title={show.original_name}\n                          rating={show.vote_average}\n                          year={show.first_air_date.substring(0,4)}\n                      />\n                  ))}\n              </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error}/>}\n      </Container>\n      )};\n  </Fragment>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: topRated }\n            } = await tvApi.topRated();\n            const {\n                data: { results: popular }\n            } = await tvApi.popular();\n            const {\n                data: { results: airingToday }\n            } = await tvApi.airingToday();\n\n            //throw Message();\n\n            this.setState({ topRated, popular, airingToday });\n\n        } catch {\n            this.setState({\n                error: \"Tv 정보를 불러올 수 없습니다..\"\n            });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nconst Header = styled.header`\n    color:white;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items: center;\n    background-color:rgba(20,20,20,0.8);\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n    z-index:999;\n`;\nconst List = styled.ul`\n    display:flex;\n`;\nconst Item = styled.li`\n    width: 50px;\n    height:50px;\n    text-align:center;\n    border-bottom: 3px solid ${props => props.current ? \"#00a4e4\" : \"transparent\"};\n    transition:border-bottom .5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n    height: 50px;\n    display:flex;\n    align-items :center;\n    justify-content : center;\n`;\n\nexport default withRouter(({location:{pathname}}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width:100%;\n  margin-top:30px;\n`;\n\nconst Input = styled.input`\nall:unset;\nfont-size:28px;\nwidth:100%;\n\n`;\n\nconst SearchPresenter = ({movieResults,tvResults,error,searchTerm,updateTerm,loading,handleSubmit}) => (\n    <Container>\n        <Helmet>\n            <title>Search | Jonflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input\n                placeholder=\"영화 , TV프로그램을 검색하세요... (영어로 ㅋㅋ)\"\n                value={searchTerm}\n                onChange={updateTerm}\n            />\n        </Form>\n        {loading ? (\n            <Loader/>\n        ) : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        {movieResults.map(movie => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0,4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV result\">\n                        {tvResults.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0,4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error}/>}\n                {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && <Message color={\"#eaeaea\"} text={`\"${searchTerm}\"에 대한 정보를 찾을 수 없습니다! `}/>}\n            </>\n        )}\n\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults:PropTypes.array,\n    tvResults:PropTypes.array,\n    error:PropTypes.string,\n    searchTerm: PropTypes.string,\n    loading:PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n\n}\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = event => {\n        const {\n            target: { value }\n        } = event;\n        this.setState({\n            searchTerm: value\n        });\n    };\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const {\n                data: { results: movieResults }\n            } = await movieApi.search(searchTerm);\n            const {\n                data: { results: tvResults }\n            } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        } catch {\n            this.setState({ error: \"결과를 찾을 수 없습니다.\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    };\n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                loading={loading}\n                error={error}\n                searchTerm={searchTerm}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"../../Components/Message\";\n\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width:70%;\n  margin-left:10px;\n`;\n\nconst Title = styled.h3`\nfont-size:32px;\nmargin-bottom:10px;\n`;\n\nconst ItemContainer = styled.div`\nmargin:20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\nmargin : 0 10px;\n`;\n\nconst Overview = styled.p`\nfont-size:12px;\nopacity: 0.7;\nline-height: 1.5;\nwidth:70%;\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) =>\n    loading ? (\n        <>\n        <Helmet>\n            <title>Loading | Jonflix</title>\n        </Helmet>\n        <Loader />\n        </>\n    ) : (\n        error\n            ? <Message color={\"red\"} text={\"정보를 찾을 수 없습니다.\"}/>\n            :         <Container>\n                <Helmet>\n                    <title>{result.original_title ? result.original_title : result.original_name} | Jonflix</title>\n                </Helmet>\n                <Backdrop\n                    bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n                />\n                <Content>\n                    <Cover\n                        bgImage={\n                            result.poster_path\n                                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                                : require(\"../../assets/noPosterSmall.png\")\n                        }\n                    />\n                    <Data>\n                        <Title>{result.original_title ? result.original_title : result.original_name} </Title>\n                        <ItemContainer>\n                            <Item>\n                                {result.release_date\n                                    ? result.release_date.substring(0,4)\n                                    : result.first_air_date.substring(0,4)}\n                            </Item>\n                            <Divider>∙</Divider>\n                            <Item>\n                                {result.runtime\n                                    ? result.runtime\n                                    : result.episode_run_time} min\n                            </Item>\n                            <Divider>∙</Divider>\n                            <Item>\n                                {result.genres && result.genres.map((genre, index)=> index === result.genres.length -1  ? genre.name : ` ${genre.name} /` )}\n                            </Item>\n                        </ItemContainer>\n                        <Overview>{result.overview}</Overview>\n                    </Data>\n                </Content>\n\n            </Container>\n    );\n\nDetailPresenter.propTypes = {\n    result:PropTypes.object,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string,\n\n}\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport {movieApi, tvApi} from \"../../api\";\n\n\nexport default class extends React.Component{\n\n    constructor(props){\n        super(props);\n        const {location:{pathname}} = props;\n        this.state = {\n            result:null,\n            error:null,\n            loading:true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n\n    async componentDidMount() {\n        const {\n            match:{\n                params:{id}\n            },\n            history: {push},\n            location: {pathname},\n\n        } = this.props;\n        const { isMovie } =this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)){\n            return push('/');\n        }\n        let result = null;\n        try{\n            if(isMovie){\n                ({data:result} = await movieApi.movieDetail(parsedId));\n            }else{\n                ({data:result} = await tvApi.showDetail(parsedId));\n            }\n        }catch{\n            this.setState({error: \"정보를 찾을 수 없습니다.\"})\n        }finally {\n            this.setState({loading:false, result});\n        }\n    }\n\n    render() {\n        const {result, error, loading} = this.state;\n        console.log(result);\n        return <DetailPresenter\n            result={result}\n            error={error}\n            loading={loading}\n        />\n    }\n\n}","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Route,\n    Redirect,\n    Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" component={TV} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }    \n    body{\n        font-family:-apple-system;\n        background-color:rgba(20,20,20,1);\n        color:#fff;\n        padding-top:50px;\n        font-size:12px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}